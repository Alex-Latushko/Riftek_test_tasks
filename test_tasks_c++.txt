Язык программирования С++. Для GUI использовать Qt. Версия Qt должна быть актуальной.

0) Написать функцию или макрос для обмена местами двух байт в аргументе типа uint16_t (вернуть результат или изменить аргумент).


1) Написать функцию или макрос для вычисления степени двойки беззнакового аргумента.


2) Написать функцию или макрос для вычисления широковещательного адреса для подсети. входные аргументы: любой ipv4 адрес этой подсети и маска этой подсети (оба в формате uint32_t). Валидировать входные данные.




3) Передача, приём и визуализация одномерных данных.
Написать две программы: источник данных и приёмник. Источник генерирует одномерные данные, приёмник принимает и визуализирует в реальном времени (наподобие осциллографа). Визуализирующий виджет приёмника должен автоматически и вручную масштабироваться по времени (оси X), ось данных - ось Y. данные между программами должны передаваться по сети (tcp/udp на выбор). Данные должны генерироваться и отправляться с максимально возможной скоростью.


3.0) Сглаживание данных на виджете (один сглаживающий фильтр или несколько на выбор в комбобоксе в GUI). настраиваемые параметры фильтрации.


3.1) Генерация данных в виде функции с добавлением произвольной составляющей (random).


3.2) Возможность выбора распределения рандома в GUI.


3.3) Программа не должна зависать и падать при тестировании с другим источником данных.


3.4) Отрисовка виджета с данными через OpenGL.


4) Построение 3D облако точек в виджете.
 За основу взять http://libqglviewer.com/

4.0) Сгенерировать данные с 3D точками (x, y, z)  — 1 млн точек и сохранить в файл. точки должны быть разными.
4.1) Добавить кнопку "Выбрать файл" на графический интерфейс, по нажатию которой через QFileDialog выбрать файл и загрузить данные.
4.2) Отрисовать эти данные на виджете.
4.3) Добавить сетку.
4.4) Подкрасить каждую точку в зависимости от координаты Z (Height map). Добавить легенд с цветовой шкалой.
4.5) Реализовать триангулирование точек, постороение поверхности.